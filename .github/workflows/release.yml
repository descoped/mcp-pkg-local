name: Release

on:
  release:
    types: [published]

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Validate tag format
        run: |
          TAG="${{ github.event.release.tag_name }}"
          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+(\.[0-9]+)?)?$ ]]; then
            echo "❌ Invalid tag format: $TAG"
            echo "Expected format: vX.Y.Z or vX.Y.Z-beta.N (e.g., v1.2.3, v1.2.3-beta.1)"
            exit 1
          fi
          echo "✅ Tag format is valid: $TAG"
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
      
      - name: Test
        run: npm test
      
      - name: Build
        run: npm run build
      
      - name: Publish to npm
        run: |
          TAG="${{ github.event.release.tag_name }}"
          if [[ "$TAG" == *"-beta"* ]]; then
            npm publish --provenance --access public --tag beta
            echo "✅ Published beta version to npm"
          else
            npm publish --provenance --access public
            echo "✅ Published stable version to npm"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}